
# Database connection with Mysql
db.driver = com.mysql.jdbc.Driver
db.url = jdbc:mysql://localhost:3306/rod3testdb?zeroDateTimeBehavior=convertToNull
db.username = testuser
db.password = testpassword

#With H2
#db.driver = org.h2.Driver
#db.url = jdbc:h2:file:C:/Projects/git/eionet.rod3/target/rod3test?zeroDateTimeBehavior=convertToNull
#db.username = roduser
#db.password = password


# Location to store the uploaded files
storage.dir = /var/tmp

# Create the initial admin user.
initial.username = 
initial.password = 

deploy.contexts = demo
deploy.dropfirst = false


#SPARQL endpoint
cr.sparql.endpoint=http://cr.eionet.europa.eu/sparql

# RA_ID namespace pref
# !!!!!!!!!!!! CHECK, IF CORRECT
#ra.namespace=http://rod.eionet.europa.eu/schema.rdf#obligation
#country.namespace=http://rod.eionet.europa.eu/schema.rdf#locality

#contreg.url.prefix=http://cr.eionet.europa.eu/view_detail.jsp?description_id=
#contreg.coverage.predicate=http://rod.eionet.europa.eu/schema.rdf#period

#rod.url.ro_namespace=http://rod.eionet.europa.eu/obligations

# !!!!!!!!! SELECT CORRECT OR CHANGE IT
#directory.service.url=http://rod.eionet.europa.eu/rpcrouter
# directory.service.url=http://213.168.23.13:81/uit/rpcrouter

#extractor.logpath=/rod/tmp/
##extractor.logpath=${app.home}/tmp/
#extractor.logfilename=extractorlog.txt
extractor.debugmode=true

#deadlines.daemon.datefile=target/tmp/deadlines-daemon-datefile.txt
##deadlines.daemon.datefile=${app.home}/tmp/deadlines-daemon-datefile.txt

#dpsir.values.file=target/log/DPSIR.xls
##dpsir.values.file=${app.home}/log/DPSIR.xls
#
##Namespace prefix for SPATIALs
#spatial.namespace=http://rod.eionet.europa.eu/spatial/
#
##Namespace prefix for issues
#issue.namespace=http://rod.eionet.europa.eu/issues/
#
##Namespace prefix for organisations
#organisation.namespace=http://rod.eionet.europa.eu/organisations/
#
##schema NS for ROD schema.rdf
#schema.namespace=http://rod.eionet.europa.eu/schema.rdf
#
##schema for Legal Instruments
#instruments.namespace=http://rod.eionet.europa.eu/instruments/
#
##for LI RSS
#rod.url.instruments=http://rod.eionet.europa.eu/instruments.rss
#
##Parameters for CR harvesting
#pred.rdf-type=http://www.w3.org/1999/02/22-rdf-syntax-ns#type
#delivery.namespace=http://rod.eionet.europa.eu/schema.rdf#Delivery
#delivery.namespaces=http://rod.eionet.europa.eu/schema.rdf#Delivery|http://rod.eionet.europa.eu/schema.rdf#Referral
#namespace.separator=|
#
##Percent of reporting frequence for approaching deadlines
#percent.of.freq=10
#
##XML-RPC server URL for UNS subscription
#uns.xml.rpc.server.url=http://uns.eionet.europa.eu/rpcrouter
#
##Channel name for UNS subscription method
#uns.channel.name=111138205489
##71133780673
#
##Event type predicate for UNS subscription method
#uns.eventtype.predicate=http://rod.eionet.europa.eu/schema.rdf#event_type
#
##Country predicate for UNS subscription method
#uns.country.predicate=http://rod.eionet.europa.eu/schema.rdf#locality
#
##Issue predicate for UNS subscription method
#uns.issue.predicate=http://rod.eionet.europa.eu/schema.rdf#issue
#
##Obligation predicate for UNS subscription method
#uns.obligation.predicate=http://rod.eionet.europa.eu/schema.rdf#obligation
#
##instrument predicate for UNS subscription method
#uns.instrument.predicate=http://rod.eionet.europa.eu/schema.rdf#instrument
#
##Organisation predicate for UNS subscription method
#uns.organisation.predicate=http://rod.eionet.europa.eu/schema.rdf#client
#
##UNS my subscriptions URL
#uns.my.subscriptions.url=http://uns.eionet.europa.eu/subsc/edit?sid=
#
##username for UNS subscriptions
#uns.username=${uns.user}
#
##password for UNS subscriptions
#uns.pwd=${uns.password}
#
##UNS xmlrpc function that is called for making subscription
#uns.make.subsription.function=UNSService.makeSubscription
#
##UNS xmlrpc function that is called for sending notifications
#uns.send.notification.function=UNSService.sendNotification
#
##Undo - number of records per page
#undo.step=25
#
##HistoryUndo - number of records per page
#history.undo.step=50
#
##can be either a cron expression or time interval:
##examples for interval: 120s, 2h
##example for cron: 0 20/0 * 1/1 * ? *
#deadlinecalc.job.interval=${deadlinecalc.job.interval}
#deadlinesdaemon.job.interval=${deadlinesdaemon.job.interval}
#extractor.job.interval=${extractor.job.interval}
#rdfexporter.job.interval=${rdfexporter.job.interval}
#
#
##the only job parameter is mode
##valid values: all, roles, deliveries, parameters
##examples:
##extractor.job.data=mode=deliveries
##extractor.job.data=mode=all
#extractor.job.data=${extractor.job.data}
#
##tables = obligations instruments issues clients spatial
##identifier is optional
##examples for jobData:
##1. schedule jobs to export all obligations and spatials with ids 6 and 8
##rdfexporter.job.data=table=obligations|table=spatial;identifier=6|table=spatial;identifier=8
##2. schedule 3 jobs to export obligations with id=12 and id=44 and all instruments
##rdfexporter.job.data=table=obligations;identifier=12|table=obligations;identifier=44|table=instruments
##3. jobs to export all tables:
##rdfexporter.job.data=table=obligations|table=issues|table=clients|table=instruments|table=spatial
#
#rdfexporter.job.data=${rdfexporter.job.data}
#
#mail.host=${mail.host}
#mail.sysadmins=${mail.sysadmins}
#
#mail.smtp.auth=${mail.smtp.auth}
